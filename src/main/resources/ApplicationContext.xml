<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd"
        default-autowire="byName">
        <!--加了这个会根据名字自动引用-->


    <!--引入属性文件-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>

    <!--定义加载数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${db_url}" />
        <property name="driverClassName" value="${db_driver}"/>
        <property name="username" value="${db_name}"/>
        <property name="password" value="${db_pwd}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${maxConnSize}"/>
    </bean>

    <!--配置会话工厂-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
       <!--&lt;!&ndash;为会话注入数据源&ndash;&gt; 因为创建会话的时候必须要用到数据库相关信息，我们之前控制台程序为了创建会话就必须加装数据库相关信息的hibernate.xml文件-->
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>

        <!--配置hibernate的参数-->
        <property name="hibernateProperties">
            <props>
                <!--配置方言-->
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.Oracle10gDialect
                </prop>
                <!--显示sql语句-->
                <prop key="hibernate.show_sql">true</prop>
                <!--自动格式化sql-->
                <prop key="hibernate.format_sql">true</prop>
                <!--&lt;!&ndash;获得当前的线程会话&ndash;&gt;可以在上下文所有的类获得当前线程会话-->
                <!--<prop key="current_session_context_class">thread</prop>-->
            </props>
        </property>

        <!--&lt;!&ndash;配置对象关系映射文件-自动扫描实体类的@table和@entity注解，建立映射关系->-->
        <property name="packagesToScan" value="cn.jboa.entity" />
    </bean>

    <!--定义一个事务管理器-->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!--此事务管理器中需要会话，因为我们在打开事务创建事务的时候，都需要用会话来创建-->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--自动开启注解的事务支持，引用一上面声明的一个事务管理-->
    <!--在方法上面加入事务,在想要事务的方法上面加上@Transactional注解 此行代码加上方法的注解   等同于   89-110行代码-->
    <tx:annotation-driven transaction-manager="txManager"/>


    <!--自动扫描注解，注入进去bean  daobean和bizbean-->
    <context:component-scan base-package="cn.jboa"/>

</beans>