<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <!--配置环境参数，因为WEB项目，是以web.xml为核心配置文件，所以最终必须在web.xml里面引用进来application.xml文件。一般都是通过上下文参数-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:ApplicationContext.xml</param-value>
  </context-param>

  <!--配置监听器，初始化spring容器随时监测spring  的appliction.xml产生的bean和会话，以及会话要销毁，有很重要的工作，所以必须随时监测-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--&lt;!&ndash;为了session而设置的过滤器，确保在jsp要得到延迟的关联对象，会话还可以打开&ndash;&gt;会话延迟-->
  <filter>
    <filter-name>openSessionInView</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    <!--&lt;!&ndash;如果spring的application.xml里面配置的会话的id名称不是sessionFactory，需要指明名称，-->
    <!--如果是就不用这步骤了，openSessionINViewFilter会自动去查找当前未关闭会话的bean&ndash;&gt;-->
    <!--<init-param>-->
    <!--<param-name>sessionFactoryBeanName</param-name>-->
    <!--<param-value>sessionFactory</param-value>-->
    <!--</init-param>-->
  </filter>
  <filter-mapping>
    <filter-name>openSessionInView</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>



  <!--解决中文乱码-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


 <!--过滤器-->

  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <welcome-file-list>
    <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>


</web-app>
        